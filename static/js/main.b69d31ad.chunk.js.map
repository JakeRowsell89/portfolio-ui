{"version":3,"sources":["components/Chart.js","components/Tracker.js","components/Trackers.js","components/Account.js","components/Accounts.js","components/ApiKeyInput.js","App.js","constants.js","helpers.js","serviceWorker.js","index.js"],"names":["colours","defaultLabelStyle","fontSize","fontFamily","Chart","assets","console","log","className","label","dataEntry","title","Math","round","percentage","labelStyle","data","filter","asset","value","map","i","type","color","Tracker","tracker","name","amount","price","Trackers","stocks","addTracker","useState","showing","setShowing","setAmount","setName","setType","key","TextField","onChange","e","target","trim","size","Number","FormControl","InputLabel","id","shrink","Select","labelId","MenuItem","Button","onClick","preventDefault","length","variant","role","aria-label","Account","Accounts","accounts","addAccount","setValue","account","ApiKeyInput","updateApiKey","handleAPIKeyChange","placeholder","trackerCache","App","setStocks","storedAccounts","localStorage","getItem","JSON","parse","setAccounts","storedTrackers","apiKey","setApiKey","trackers","setTrackers","formData","updateAPIKeyFormData","useEffect","axios","get","then","returnedPrice","valueString","test","normalisePrice","newStocksPrice","priceFromAPI","EPSILON","oldStocksPrice","s","Error","stringify","catch","error","concat","newAccounts","setItem","newStocks","reduce","p","c","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b69d31ad.chunk.js","sourcesContent":["import React from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nconst colours = [\n  \"#F87AFF\",\n  \"#AB1DE0\",\n  \"#8718F5\",\n  \"#4E16E0\",\n  \"#4940FF\",\n  \"#7B91FF\",\n  \"#3D1DE0\",\n  \"#8718F5\",\n  \"#BE0BE0\",\n  \"#FF29BB\",\n];\n\nconst defaultLabelStyle = {\n  fontSize: \"4px\",\n  fontFamily: \"sans-serif\",\n};\n\nfunction Chart({ assets }) {\n  console.log(assets);\n  return (\n    <div className=\"Chart\">\n      <section className=\"Chart-list\">\n        <PieChart\n          label={({ dataEntry }) => `\n          ${dataEntry.title}\n          ${Math.round(dataEntry.percentage)} %\n          `}\n          labelStyle={{\n            ...defaultLabelStyle,\n          }}\n          data={assets\n            .filter((asset) => asset.value)\n            .map((asset, i) => ({\n              title: asset.type,\n              value: asset.value,\n              color: colours[i],\n            }))}\n        />\n      </section>\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\n\nfunction Tracker({ tracker }) {\n  return (\n    <div className=\"Tracker\">\n      <section className=\"Tracker-list\">\n        {`${tracker.name} (${tracker.type}) - ${tracker.amount}x${tracker.price} = ${tracker.value}`}\n      </section>\n    </div>\n  );\n}\n\nexport default Tracker;\n","import React, { useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Tracker from \"./Tracker\";\nimport \"./Trackers.css\";\n\nfunction Trackers({ stocks, addTracker }) {\n  const [showing, setShowing] = useState(false);\n  const [amount, setAmount] = useState();\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"stock\");\n  const updateTracker = (e) => {\n    setName(e.target.value.trim());\n  };\n  const updateAmount = (e) => {\n    setAmount(Number(e.target.value.trim()));\n  };\n  const updateType = (e) => {\n    console.log(e.target.value.trim());\n    setType(e.target.value.trim());\n  };\n  const saveTracker = (e) => {\n    e.preventDefault();\n\n    if (name.length) {\n      addTracker(name, amount, type);\n      setAmount(null);\n      setName(\"\");\n      setType(\"\");\n      setShowing(false);\n    }\n  };\n  return (\n    <div className=\"Trackers\">\n      <header className=\"Trackers-header\">My Trackers</header>\n      <section className=\"Trackers-list\">\n        {stocks.map((tracker, i) => (\n          <Tracker tracker={tracker} key={i} />\n        ))}\n      </section>\n      {showing ? (\n        <form className=\"stocks-form\">\n          <TextField\n            onChange={updateTracker}\n            label=\"Asset Symbol\"\n            value={name}\n            size=\"medium\"\n          />\n          <TextField\n            onChange={updateAmount}\n            label=\"Amount\"\n            value={amount}\n            size=\"medium\"\n          />\n          <FormControl>\n            <InputLabel id=\"asset-type-input\" shrink={true}>\n              Type\n            </InputLabel>\n            <Select\n              onChange={updateType}\n              value={type}\n              labelId=\"asset-type-input\"\n            >\n              <MenuItem value=\"bond\">bond</MenuItem>\n              <MenuItem value=\"gold\">gold</MenuItem> \n              <MenuItem value=\"stock\">stock</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Button\n            onClick={saveTracker}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Save\n          </Button>\n          <Button\n            onClick={() => setShowing(false)}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Cancel\n          </Button>\n        </form>\n      ) : (\n        <div onClick={() => setShowing(true)}>\n          <span role=\"img\" aria-label=\"Add new asset\"></span>➕\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Trackers;\n","import React from \"react\";\n\nfunction Account({ name, value }) {\n  return (\n    <div className=\"Account\">\n      <section className=\"Account-list\">\n        {name} {value}\n      </section>\n    </div>\n  );\n}\n\nexport default Account;\n","import React, { useState } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Account from \"./Account.js\";\nimport \"./Accounts.css\";\n\nfunction Accounts({ accounts, addAccount }) {\n  const [name, setName] = useState(\"\");\n  const [value, setValue] = useState(0);\n  const [showing, setShowing] = useState(false);\n\n  const updateName = (e) => {\n    setName(e.target.value.trim());\n  };\n\n  const updateBalance = (e) => {\n    setValue(Number(e.target.value.trim()));\n  };\n\n  const saveAccountDetails = (e) => {\n    e.preventDefault();\n    if (name.length) {\n      addAccount(name, value);\n      setValue(0);\n      setName(\"\");\n      setShowing(false);\n    }\n  };\n  return (\n    <div className=\"Accounts\">\n      <header className=\"Accounts-header\">My Accounts</header>\n      <section className=\"Accounts-list\">\n        {accounts.map((account, i) => (\n          <Account name={account.name} value={account.value} key={i} />\n        ))}\n      </section>\n      {showing ? (\n        <form className=\"accounts-form\">\n          <TextField\n            label=\"Name\"\n            onChange={updateName}\n            value={name}\n            size=\"medium\"\n          />\n          <TextField\n            label=\"Balance\"\n            onChange={updateBalance}\n            value={value}\n            size=\"medium\"\n          />\n          <Button\n            onClick={saveAccountDetails}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Save\n          </Button>\n          <Button\n            onClick={() => setShowing(false)}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Cancel\n          </Button>\n        </form>\n      ) : (\n        <div onClick={() => setShowing(true)}>\n          <span role=\"img\" aria-label=\"Add new account\">\n            ➕\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Accounts;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction ApiKeyInput({ updateApiKey, handleAPIKeyChange }) {\n  return (\n    <form>\n      <input\n        type=\"text\"\n        onChange={handleAPIKeyChange}\n        placeholder=\"Your alphavantage API key\"\n      />\n      <Button size=\"small\" variant=\"outlined\" onClick={updateApiKey}>\n        Go!\n      </Button>\n    </form>\n  );\n}\n\nexport default ApiKeyInput;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"./components/Chart\";\nimport Trackers from \"./components/Trackers\";\nimport Accounts from \"./components/Accounts\";\nimport ApiKeyInput from \"./components/ApiKeyInput\";\nimport { API_KEY, TRACKERS, ACCOUNTS } from \"./constants\";\nimport normalisePrice from \"./helpers\";\nimport \"./App.css\";\n\nconst trackerCache = {};\n\nfunction App() {\n  const [stocks, setStocks] = useState([]);\n  const storedAccounts = localStorage.getItem(ACCOUNTS) || \"[]\";\n  const [accounts, setAccounts] = useState(JSON.parse(storedAccounts));\n  const storedTrackers = localStorage.getItem(TRACKERS) || \"[]\";\n  const [apiKey, setApiKey] = useState(localStorage.getItem(API_KEY));\n  const [trackers, setTrackers] = useState(JSON.parse(storedTrackers));\n  const [formData, updateAPIKeyFormData] = useState(\"\");\n\n  const handleAPIKeyChange = (e) => updateAPIKeyFormData(e.target.value.trim());\n\n  const updateApiKey = (e) => {\n    e.preventDefault();\n    localStorage.setItem(API_KEY, formData);\n    setApiKey(formData);\n  };\n\n  const addTracker = (name, amount, type) => {\n    const newStocks = [...stocks, { amount, name, type }];\n    localStorage.setItem(TRACKERS, JSON.stringify(newStocks));\n    setTrackers(newStocks);\n    setStocks(newStocks);\n  };\n\n  const addAccount = (name, value) => {\n    const newAccounts = [...accounts, { name, value, type: \"savings\" }];\n    localStorage.setItem(ACCOUNTS, JSON.stringify(newAccounts));\n    setAccounts(newAccounts);\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < trackers.length; i++) {\n      const tracker = trackers[i];\n      if (!trackerCache[tracker.name]) {\n        axios\n          .get(\n            `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${tracker.name}.L&apikey=${apiKey}`\n          )\n          .then(({ data }) => {\n            console.log(data);\n            const returnedPrice = data[\"Global Quote\"][\"05. price\"];\n            const price = normalisePrice(tracker.name, returnedPrice);\n            const newStocksPrice = {\n              ...tracker,\n              priceFromAPI: returnedPrice,\n              price,\n              value:\n                Math.round((price * tracker.amount + Number.EPSILON) * 100) /\n                100,\n            };\n\n            console.log(newStocksPrice);\n            setStocks((oldStocksPrice) => [\n              ...oldStocksPrice.filter((s) => s.name !== tracker.name),\n              newStocksPrice,\n            ]);\n            if (!data && data[\"Global Quote\"]) {\n              throw new Error(\"Possible API limit hit\", JSON.stringify(data));\n            }\n          })\n          .catch(console.error);\n      }\n      trackerCache[tracker.name] = true;\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chart assets={stocks.concat(accounts)} />\n        <Accounts accounts={accounts} addAccount={addAccount} />\n        {apiKey ? (\n          <Trackers stocks={stocks} addTracker={addTracker} />\n        ) : (\n          <ApiKeyInput\n            updateApiKey={updateApiKey}\n            handleAPIKeyChange={handleAPIKeyChange}\n          />\n        )}\n        Total portfolio value:{\" \"}\n        {stocks.reduce((p, c) => p + c.value, 0) +\n          accounts.reduce((p, c) => p + c.value, 0)}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export const API_KEY = \"alphavantage_api_key\";\nexport const TRACKERS = \"stock_trackers\";\nexport const ACCOUNTS = \"bank_accounts\";\n","export default function normalisePrice(tracker, valueString) {\n  const value = Number(valueString);\n  if (/^SGLN/.test(tracker)) {\n    return value / 100;\n  }\n  return value;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}